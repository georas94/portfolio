{% extends 'base.html.twig' %}

{% block title %}Créer un nouvel AO{% endblock %}

{% block body %}
    <div class="container mx-auto px-4 py-8">
        <!-- Affichage des succès/erreurs -->
        {% for message in app.flashes('registration_success') %}
            <div class="inset-0 flex items-center justify-center text-center">
                <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5 w-1/2">
                    {{ message }}
                </div>
            </div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="inset-0 flex items-center justify-center text-center">
                <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5 w-1/2">
                    {{ message }}
                </div>
            </div>
        {% endfor %}
        <div class="max-w-3xl mx-auto">
            <div class="bg-white rounded-xl shadow-md overflow-hidden">
                <div class="p-8">
                    {{ form_start(form, {'attr': {'enctype': 'multipart/form-data'}}) }}
                    <div class="space-y-6">
                        <!-- Référence -->
                        <div class="space-y-2">
                            {{ form_label(form.reference, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
                            <div class="relative rounded-md shadow-sm">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
                                    </svg>
                                </div>
                                {{ form_widget(form.reference, {'attr': {
                                    'class': 'h-8 focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md',
                                    'placeholder': 'REF-2023-001'
                                }}) }}
                            </div>
                            {{ form_errors(form.reference) }}
                        </div>

                        <!-- Titre -->
                        <div class="space-y-2">
                            {{ form_label(form.titre, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
                            <div class="relative rounded-md shadow-sm">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                    </svg>
                                </div>
                                {{ form_widget(form.titre, {'attr': {
                                    'class': 'h-8 focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md',
                                    'placeholder': 'Titre descriptif de l\'AO'
                                }}) }}
                            </div>
                            {{ form_errors(form.titre) }}
                        </div>

                        <!-- Description -->
                        <div class="space-y-2">
                            {{ form_label(form.description, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
                            {{ form_widget(form.description, {'attr': {
                                'class': 'focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md h-32',
                                'placeholder': 'Détails complets de l\'appel d\'offres...'
                            }}) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <!-- Entreprise -->
                        <div class="space-y-2">
                            {{ form_label(form.entreprise, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
                            <div class="relative rounded-md shadow-sm">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                                    </svg>
                                </div>
                                {{ form_widget(form.entreprise, {'attr': {
                                    'class': 'h-8 focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md',
                                    'placeholder': 'Nom de l\'entreprise'
                                }}) }}
                            </div>
                            {{ form_errors(form.entreprise) }}
                        </div>

                        <!-- Date Limite -->
                        <div class="space-y-2">
                            {{ form_label(form.dateLimite, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
                            <div class="relative rounded-md shadow-sm">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                                    </svg>
                                </div>
                                {{ form_widget(form.dateLimite, {'attr': {
                                    'class': 'h-8 focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md',
                                }}) }}
                            </div>
                            {{ form_errors(form.dateLimite) }}
                        </div>

                        <!-- Budget -->
                        <div class="space-y-2">
                            {{ form_label(form.budget, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
                            <div class="relative rounded-md shadow-sm">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                    </svg>
                                </div>
                                {{ form_widget(form.budget, {'attr': {
                                    'class': 'h-8 focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md',
                                    'placeholder': 'Montant en XOF'
                                }}) }}
                            </div>
                            {{ form_errors(form.budget) }}
                        </div>

                        <!-- Statut -->
                        <div class="space-y-2">
                            {{ form_label(form.statut, null, {
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700'}
                            }) }}
                            <div class="relative rounded-md shadow-sm">
                                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l4-4 4 4m0 6l-4 4-4-4"/>
                                    </svg>
                                </div>
                                {{ form_widget(form.statut, {
                                    'attr': {
                                        'class': 'mt-1 block w-full pl-3 pr-10 py-2 text-base border-2 border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md appearance-none bg-white'
                                    }
                                }) }}
                            </div>
                            {{ form_errors(form.statut) }}
                        </div>
                        <!-- Upload de fichiers (optionnel) -->
                        <div
                            x-data="{
                                files: [],
                                handleFiles(event) {
                                    const maxSize = 5 * 1024 * 1024; // 5 Mo
                                    this.files = [];

                                    for (let file of event.target.files) {
                                        if (file.size <= maxSize) {
                                            this.files.push(file);
                                        } else {
                                            alert(`${file.name} est trop lourd (max 5 Mo)`);
                                        }
                                    }
                                },
                                getFileIcon(file) {
                                    const type = file.type;

                                    if (type.includes('pdf')) {
                                        return 'pdf';
                                    } else if (type.includes('image')) {
                                        return 'image';
                                    } else if (type.includes('word')) {
                                        return 'word';
                                    } else if (type.includes('excel') || type.includes('spreadsheetml')) {
                                        return 'excel';
                                    } else if (type.includes('zip')) {
                                        return 'zip';
                                    } else {
                                        return 'default';
                                    }
                                }
                            }"
                                class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer transition hover:border-blue-500 hover:bg-blue-50 hover:shadow-md hover:scale-105"
                                @click="$refs.fileInput.click()"
                                :class="{'border-blue-500 bg-blue-50': files.length > 0}"
                                @dragover.prevent
                        >
                            <!-- Texte dans la zone -->
                            <p class="text-gray-500"><span class="text-blue-600">Clique pour parcourir</span></p>

                            <!-- Input file caché généré par Symfony -->
                            {{ form_widget(form.documents, {
                                'attr': {
                                    'class': 'hidden',
                                    'x-ref': 'fileInput',
                                    'x-on:change': 'handleFiles($event)'
                                }
                            }) }}

                            <!-- Affichage des fichiers sélectionnés avec icônes -->
                            <template x-if="files.length > 0">
                                <ul class="mt-4 space-y-2 text-left text-sm text-gray-700">
                                    <template x-for="(file, index) in files" :key="file.name">
                                        <li class="flex items-center gap-2">
                                            <!-- Icône spécifique en fonction du type MIME -->
                                            <!-- Icône dynamique -->
                                            <template x-if="getFileIcon(file) === 'pdf'">
                                                <svg class="w-5 h-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M6 2h9l5 5v13a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2z" />
                                                </svg>
                                            </template>

                                            <template x-if="getFileIcon(file) === 'image'">
                                                <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M3 4a1 1 0 011-1h16a1 1 0 011 1v16a1 1 0 01-1 1H4a1 1 0 01-1-1V4z" />
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M8 11l4 4 5-5" />
                                                </svg>
                                            </template>

                                            <template x-if="getFileIcon(file) === 'word'">
                                                <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M6 2h9l5 5v13a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2z" />
                                                </svg>
                                            </template>

                                            <template x-if="getFileIcon(file) === 'excel'">
                                                <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M6 2h9l5 5v13a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2z" />
                                                </svg>
                                            </template>

                                            <template x-if="getFileIcon(file) === 'zip'">
                                                <svg class="w-5 h-5 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M6 2h9l5 5v13a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2z" />
                                                </svg>
                                            </template>

                                            <template x-if="getFileIcon(file) === 'default'">
                                                <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M4 4h16v16H4z" />
                                                </svg>
                                            </template>
                                            <!-- Nom du fichier -->
                                            <span x-text="file.name"></span>
                                            <!-- Bouton de suppression -->
                                            <button type="button" @click="files.splice(index, 1);$event.preventDefault(); $event.stopPropagation()" class="text-red-500 hover:text-red-700">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                            </button>
                                        </li>
                                    </template>
                                </ul>
                            </template>
                        </div>
                    </div>
                    <div class="mt-8 pt-5 border-t border-gray-200 flex justify-end space-x-3">
                        <a href="{{ path('app_home') }}" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Annuler
                        </a>
                        <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                            </svg>
                            Créer l'AO
                        </button>
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const dropZone = document.querySelector('[x-data="{ files: [] }"]');

            // Gestion du drag and drop
            dropZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropZone.classList.add('border-blue-500', 'bg-blue-50'); // Mise en surbrillance
            });

            dropZone.addEventListener('dragleave', () => {
                dropZone.classList.remove('border-blue-500', 'bg-blue-50'); // Retrait de la mise en surbrillance
            });

            dropZone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropZone.classList.remove('border-blue-500', 'bg-blue-50'); // Retrait de la mise en surbrillance

                const files = e.dataTransfer.files; // Récupère les fichiers déposés
                const fileInput = dropZone.querySelector('[x-ref="fileInput"]');
                fileInput.files = files; // Attribue les fichiers à l'input caché

                // Affiche les fichiers déposés
                const fileList = dropZone.querySelector('ul');
                fileList.innerHTML = ''; // Vide la liste actuelle
                for (let i = 0; i < files.length; i++) {
                    const listItem = document.createElement('li');
                    listItem.classList.add('flex', 'items-center', 'gap-2');

                    const fileName = document.createElement('span');
                    fileName.textContent = files[i].name;

                    const removeButton = document.createElement('button');
                    removeButton.classList.add('text-red-500', 'hover:text-red-700');
                    removeButton.innerHTML = `<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                          </svg>`;

                    // Ajout de l'icône de fichier et du bouton de suppression
                    listItem.appendChild(fileName);
                    listItem.appendChild(removeButton);

                    // Gère la suppression des fichiers de la liste
                    removeButton.addEventListener('click', () => {
                        fileList.removeChild(listItem);
                        // Pour retirer le fichier de l'input file, tu peux gérer l'array de files ici si nécessaire
                    });

                    fileList.appendChild(listItem);
                }
            });
        });
    </script>
{% endblock %}